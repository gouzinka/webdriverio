# Odbočka k JavaScriptu

JavaScript je programovací jazyk, který je multiplatformní, setkáme se s ním na webových stránkách, kde vykonává úlohy na straně klienta, zároveň je však užit v prostředích jako je Node.js.

Standardem pro JavaScript, je ECMAScript https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources. V roce 2015 vyšel po 6 letech průlomový update s označením ECMAScript 2015, nebo také často jako ES6. Přinesl mnoho novinek (např. let/const klíčová slova pro označení proměnných, deklaraci tříd, import/export...). Od tohoto vydání dochází k publikaci nového každý rok, aktuálně se tedy můžeme těšit z ECMAScript 2019 (ES10), který například přinesl nové možnosti práce s poli - https://blog.logrocket.com/5-es2019-features-you-can-use-today/
Tyto nové featury jsou implementovány postupně, podporu pro Node.js můžeme vidět zde https://node.green/, abychom mohli využívat nejnovějších featur a nemuseli se bát, že je nebude naše prostředí podporovat, můžeme použít kompilátor - https://babeljs.io/

# Jak definovat proměnnou

Proměnné slouží k uložení hodnot, v javaScriptu deklarujeme proměnnou pomocí klíčového slova `let`, `const`, nebo méně doporučovaného `var`.
Jak proměnné vlastně fungují? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_Types#Variables

## `var` vs. `let`

Historicky existovalo pro definování proměnných v javaScriptu pouze klíčové slovo `var`. To však bylo změněno v roce 2015, kdy ES6 přinesl nové klíčové slovo `let`.
Jak se vlastně liší? Najdete zde https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#The_difference_between_var_and_let

# Jak psát funkce

Společně s `let` a `const` ES6 přinesla také tzv. 'arrow functions'. Ty představují kompaktnější syntaxi pro zápis funkcí.
https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/
https://www.freecodecamp.org/news/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26/

